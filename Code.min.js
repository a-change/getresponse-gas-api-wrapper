function GetResponse(type,apiKey,env,domain){function isObject(item){return typeof item==='object'&&item.constructor!==Array&&item!==null}
function getUrl(type,env){var baseUrl='';if(type=='360'||type.toLowerCase()==='enterprise'){if(env.toLowerCase()==='pl'){baseUrl='https://api3.getresponse360.pl/v3/'}else if(env.toLowerCase()==='us'){baseUrl='https://api3.getresponse360.com/v3/'}else{var check=JSON.parse(checkEnvironment());env=check.env;return check.baseUrl}}else if(type.toLowerCase()==='retail'||type.toLowerCase()==='smb'){baseUrl='https://api.getresponse.com/v3/'}
return baseUrl}
var baseUrl=getUrl(type,env);function checkEnvironment(){if(type==='retail'){return this.get('accounts')}
var envs=[{env:'pl',domain:domain,type:'enterprise',baseUrl:'https://api3.getresponse360.pl/v3/'},{env:'us',domain:domain,type:'enterprise',baseUrl:'https://api3.getresponse360.com/v3/'}];for(var i in envs){var response=sendRequest_(envs[i].type,envs[i].env,apiKey,envs[i].domain,envs[i].baseUrl,'accounts','get','');var responseCode=response.getResponseCode();if(response.httpStatus===404&&response.message==='Incorrect environment'){continue}else{response=JSON.parse(response);if(responseCode<=299){env=envs[i].env;return JSON.stringify(envs[i])}}}
return JSON.stringify({error:!0,code:'0',httpStatus:404,message:'No matching environment: probably an SMB account or just wrong credentials'})};function sendRequest_(type,env,apiKey,domain,baseUrl,request,method,body){var url=baseUrl+request;var headers={'X-Auth-Token':'api-key '+apiKey};if(domain)headers['X-DOMAIN']=domain;var options={headers:headers,contentType:'application/json',method:method,payload:body,muteHttpExceptions:!0};Logger.log(url);var response=UrlFetchApp.fetch(url,options);var responseCode=response.getResponseCode();var responseString=response.toString();if(responseString.indexOf('<!DOCTYPE html>')!=-1){response={error:!0,code:'0',httpStatus:404,getResponseCode:function(){return 404},message:'Incorrect environment'}}
return response}
function uploadFile_(type,env,apiKey,domain,baseUrl,blob){var url=baseUrl+"multimedia/";if(!domain)domain="";var headers={"X-DOMAIN":domain,"X-Auth-Token":"api-key "+apiKey};var boundary="labnol";var attributes="{\"name\":\""+blob.getName()+"\"}";var requestBody=Utilities.newBlob("--"+boundary+"\r\n"+"Content-Disposition: form-data; name=\"attributes\"\r\n\r\n"+attributes+"\r\n"+"--"+boundary+"\r\n"+"Content-Disposition: form-data; name=\"file\"; filename=\""+blob.getName()+"\"\r\n"+"Content-Type: "+blob.getContentType()+"\r\n\r\n").getBytes().concat(blob.getBytes()).concat(Utilities.newBlob("\r\n--"+boundary+"--\r\n").getBytes());var options={"method":"post","contentType":"multipart/form-data; boundary="+boundary,"payload":requestBody,"muteHttpExceptions":!1,"headers":headers};var response=UrlFetchApp.fetch(url,options);Logger.log(response.getContentText());return response}
function prepareRequest(request,parameters){request=request.trim();if(request[request.length-1]!=='/'){request+='/'}
if(parameters){request+=queryGenerator(parameters)}
return request}
function queryGenerator(parameters){if(parameters===undefined){return''}
if(typeof parameters==='string'&&parameters[0]==='?'){return parameters}
var queryString='?';if(isObject(parameters.query)){for(var i in parameters.query){if(i==='createdOn'||i==='sendOn'){for(var j in parameters.query[i]){if(!parameters.query[i][j])continue;queryString+='query['+i+']['+j+']='+encodeURIComponent(parameters.query[i][j])+'&'}}else{queryString+='query['+i+']='+encodeURIComponent(parameters.query[i])+'&'}}}
if(isObject(parameters.sort)){for(var k in parameters.sort){if(!parameters.sort[k])continue
queryString+='sort['+k+']='+encodeURIComponent(parameters.sort[k])+'&'}}
for(var k in parameters){if(!parameters[k])continue;if(k!=='query'&&k!=='sort'){queryString+=k+'='+encodeURIComponent(parameters[k])+'&'}}
return queryString}
var self={apiKey:apiKey,type:type||'retail',env:env||'',domain:domain||'',baseUrl:baseUrl,get:function(request,parameters){var method='get';request=prepareRequest(request,parameters);return sendRequest_(this.type,this.env,this.apiKey,this.domain,this.baseUrl,request,method,'')},post:function(request,body){var method='post';return sendRequest_(this.type,this.env,this.apiKey,this.domain,this.baseUrl,request,method,JSON.stringify(body))},remove:function(request,parameters,body){var method='delete';request=prepareRequest(request,parameters);return sendRequest_(this.type,this.env,this.apiKey,this.domain,this.baseUrl,request,method,JSON.stringify(body))},upload:function(blob){return uploadFile_(this.type,this.env,this.apiKey,this.domain,this.baseUrl,blob)}};var methods={};methods.queryGenerator=queryGenerator;methods.getContacts=function(parameters){return self.get('contacts',parameters)}
methods.getContact=function(contactId,fields){return self.get('contacts/'+contactId,{fields:fields})}
methods.createContact=function(contact){return self.post('contacts',contact)}
methods.updateContact=function(contactId,contact){return self.post('contacts/'+contactId,contact)}
methods.updateContactCustoms=function(contactId,customs){return self.post('contacts/'+contactId+'/custom-fields',{customFieldValues:customs})}
methods.updateContactTags=function(contactId,tags){return self.post('contacts/'+contactId+'/tags',{tags:tags})}
methods.getContactActivities=function(contactId,parameters){return self.get('contacts/'+contactId,parameters)}
methods.deleteContact=function(contactId,parameters){return self.remove('contacts/'+contactId,parameters)}
methods.getNewsletters=function(parameters){return self.get('newsletters',parameters)}
methods.getNewsletter=function(newsletterId,fields){return self.get('newsletters/?'+newsletterId,{fields:fields})}
methods.getNewslettersStats=function(parameters){return self.get('newsletters/statistics',parameters)}
methods.getNewsletterStats=function(newsletterId,parameters){return self.get('newsletter/'+newsletterId+'/statisitcs',parameters)}
methods.createNewsletter=function(newsletter){return self.post('newsletters',newsletter)}
methods.sendDraft=function(draftSettings){return self.post('send-draft',draftSettings)}
methods.cancelNewsletter=function(newsletterId){return self.post('newsletters/'+newsletterId)}
methods.deleteNewsletter=function(newsletterId){return self.remove('newsletters/'+newsletterId)}
methods.getCampaigns=function(parameters){return self.get('campaigns',parameters)}
methods.getCampaign=function(campaignId,fields){return self.get('campaigns/'+campaignId,{fields:fields})}
methods.getCampaignContacts=function(campaignId,parameters){return self.get('campaigns/'+campaignId+'/contacts',parameters)}
methods.getCampaignBlacklist=function(campaignId,parameters){return self.get('campaigns/'+campaignId+'/blacklists',parameters)}
methods.getCampaignsListSize=function(parameters){return self.get('campaigns/statistics/list-size',parameters)}
methods.getCampaignsLocations=function(parameters){return self.get('campaigns/statistics/locations',parameters)}
methods.getCampaignsOrigins=function(parameters){return self.get('campaigns/statistics/origins',parameters)}
methods.getCampaignsRemovals=function(parameters){return self.get('campaigns/statistics/removals',parameters)}
methods.getCampaignsSubscriptions=function(parameters){return self.get('campaigns/statistics/subscriptions',parameters)}
methods.getCampaignsBalance=function(parameters){return self.get('campaigns/statistics/balance',parameters)}
methods.getCampaignsSummary=function(parameters){return self.get('campaigns/statistics/summary',parameters)}
methods.createCampaign=function(campaign){return self.post('campaigns',campaign)}
methods.updateCampaign=function(campaignId,settings){return self.post('campaigns/'+campaignId,settings)}
methods.updateCampaignBlacklist=function(campaignId,masks){return self.post('campaign/'+campaignId+'/blacklists',{masks:masks})}
methods.getAutoresponders=function(parameters){return self.get('autoresponders',parameters)}
methods.getAutoresponder=function(autoresponderId,fields){return self.get('autoresponders/'+autoresponderId,{fields:fields})}
methods.getAutorespondersStats=function(parameters){return self.get('autoresponders/statistics',parameters)}
methods.getAutoresponderStats=function(autoresponderId,parameters){return self.get('autoresponders/'+autoresponderId+'/statistics',parameters)}
methods.getAutoresponderThumbnail=function(autoresponderId,size){return self.get('autoresponders/'+autoresponderId+'/thumbnail',{size:size})}
methods.createAutoresponder=function(autoresponder){return self.post('autoresponders',autoresponder)}
methods.updateAutoresponder=function(autoresponderId,autoresponderSettings){return self.post('autoresponders/'+autoresponderId,autoresponderSettings)}
methods.deleteAutoresponder=function(autoresponderId){return self.remove('autoresponders/'+autoresponderId)}
methods.getRssNewsletters=function(parameters){return self.get('rss-newsletters',parameters)}
methods.getRssNewsletter=function(newsletterId,fields){return self.get('rss-newsletters/'+newsletterId,{fields:fields})}
methods.getRssNewslettersStats=function(parameters){return self.get('rss-newsletters/statistics',parameters)}
methods.getRssNewsletterStats=function(newsletterId,parameters){return self.get('rss-newsletters/'+newsletterId+'/statistics',parameters)}
methods.createRssNewsletter=function(newsletter){return self.post('rss-newsletters',newsletter)}
methods.updateRssNewsletter=function(newsletterId,newsletter){return self.post('rss-newsletters/'+newsletterId,newsletter)}
methods.deleteRssNewsletter=function(newsletterId){return self.remove('rss-newsletters/'+newsletterId)}
methods.getFromFields=function(parameters){return self.get('from-fields',parameters)}
methods.getFromField=function(fromFieldId,fields){return self.get('from-fields/'+fromFieldId,{fields:fields})}
methods.createFromField=function(email,name){return self.post('from-fields',{email:email,name:name})}
methods.setFromFieldAsDefault=function(fromFieldId){return self.post('from-fields/'+fromFieldId+'/default')}
methods.deleteFromField=function(fromFieldIdToRemove,fromFieldIdToReplaceWith){return self.remove('from-fields/'+fromFieldIdToRemove,'',{fromFieldIdToReplaceWith:fromFieldIdToReplaceWith})}
methods.getCustomFields=function(parameters){return self.get('custom-fields',parameters)}
methods.getCustomField=function(customFieldId,fields){return self.get('custom-fields/'+customFieldId,{fields:fields})}
methods.createCustomField=function(customField){return self.post('custom-fields',customField)}
methods.updateCustomField=function(customFieldId,customFieldSettings){return self.post('custom-fields/'+customFieldId,customFieldSettings)}
methods.deleteCustomField=function(customFieldId){return self.remove('custom-fields/'+customFieldId)}
methods.getTags=function(parameters){return self.get('tags',parameters)}
methods.getTag=function(tagId,parameters){return self.get('tags/'+tagId,parameters)}
methods.createTag=function(tagName){return self.post('tags',{name:tagName})}
methods.updateTag=function(tagId,tagName){return self.post('tags/'+tagId,{name:tagName})}
methods.deleteTag=function(tagId){return self.remove('tags/'+tagId)}
methods.getWebinars=function(parameters){return self.get('webinars',parameters)}
methods.getWebinar=function(webinarId,fields){return self.get('webinars/'+webinarId,{fields:fields})}
methods.getForms=function(parameters){return self.get('forms',parameters)}
methods.getForm=function(formId,fields){return self.get('forms/'+formId,{fields:fields})}
methods.getFormVariants=function(formId,fields){return self.get('forms/'+formId+'/variants',{fields:fields})}
methods.getWebForms=function(parameters){return self.get('web-forms',parameters)}
methods.getWebForm=function(webFormId,fields){return self.get('web-forms/'+webFormId,{fields:fields})}
methods.getLandingPages=function(parameters){return self.get('landing-pages',parameters)}
methods.getLandingPage=function(landingPageId,fields){return self.get('landing-page/'+landingPageId,{fields:fields})}
methods.getImports=function(parameters){return self.get('imports',parameters)}
methods.getImport=function(importId,fields){return self.get('imports/'+importId,{fields:fields})}
methods.getSuppressions=function(parameters){return self.get('suppressions',parameters)}
methods.getSuppression=function(suppressionId){return self.get('suppressions/'+suppressionId)}
methods.createSuppression=function(name,masks){return self.post('suppressions',{name:name,masks:masks})}
methods.updateSuppression=function(suppressionId,name,masks){return self.post('suppressions/'+suppressionId,{name:name,masks:masks})};methods.deleteSuppression=function(suppressionId){return self.remove('suppressions/'+suppressionId)}
methods.getSubscriptionConfirmationsBody=function(languageCode){return self.get('subscription-confirmations/body/'+languageCode)}
methods.getSubscriptionConfirmationsSubject=function(languageCode){return self.get('subscription-confirmations/subject/'+languageCode)}
methods.getPipelines=function(parameters){return self.get('pipelines',parameters)}
methods.getPipeline=function(pipelineId,fields){return self.get('pipelines/'+pipelineId,{fields:fields})}
methods.getPipelineStages=function(pipelineId,fields){return self.get('pipelines/'+pipelineId+'/stages',{fields:fields})}
methods.getPipelineStage=function(pipelineId,stageId,fields){return self.get('pipelines/'+pipelineId+'/stages/'+stageId,{fields:fields})}
methods.getAutomationWorklows=function(page,perPage){return self.get('workflow',{perPage:perPage,page:page})}
methods.getAutomationWorkflow=function(workflowId){return self.get('workflow/'+workflowId)}
methods.updateWorkflowStatus=function(workflowId,status){return self.post('workflow/'+workflowId,{status:status})}
methods.getAccount=function(fields){return self.get('accounts',{fields:fields})}
methods.getAccountBilling=function(fields){return self.get('accounts/billing',{fields:fields})}
methods.getAccountLoginHistory=function(fields,perPage,page){return self.get('accounts/login-history',{fields:fields,perPage:perPage,page:page})}
methods.getAccountBadge=function(){return self.get('accounts/badge')}
methods.getAccountIndustries=function(fields){return self.get('accounts/industries',{fields:fields})}
methods.getAccountTimeZones=function(fields){return self.get('accounts/time-zones',{fields:fields})}
methods.getAccountBlacklist=function(mask){return self.get('accounts/blacklists',{query:{mask:mask}})}
methods.updateAccountBlacklist=function(masks){return self.post('accounts/blacklists',{masks:masks})}
methods.updateAccountBadgeStatus=function(status){return self.post('accounts/badge',{status:status})}
methods.updateAccountInformation=function(accountInformation){return self.post('accounts',accountInformation)}
methods.getSavedSearches=function(parameters){return self.get('search-contacts',parameters)}
methods.getSavedSearch=function(savedSearchId){return self.get('search-contacts/'+savedSearchId)}
methods.getSavedSearchContacts=function(savedSearchId){return self.get('search-contacts/'+savedSearchId+'/contacts')}
methods.createSavedSearch=function(savedSearchConditions){return self.post('search-contacts',savedSearchConditions)}
methods.updateSavedSearch=function(savedSearchId,savedSearchConditions){return self.post('search-contacts/'+savedSearchId,savedSearchConditions)}
methods.setCustomFieldsToSavedSearch=function(savedSearchId,customFields){return self.post('search-contacts/'+savedSearchId+'/custom-fields',{customFieldValues:customFields})}
methods.searchContacts=function(searchConditions){return self.post('search-contacts/contacts',searchConditions)}
methods.deleteSavedSearch=function(savedSearchId){return self.remove('search-contacts/'+savedSearchId)}
methods.getShops=function(parameters){return self.get('shops',parameters)}
methods.getShop=function(shopId,fields){return self.get('shops/'+shopId,{fields:fields})}
methods.createShop=function(shop){return self.post('shops',shop)}
methods.updateShop=function(shopId,shopSettings){return self.post('shops/'+shopId,shopSettings)}
methods.deleteShop=function(shopId){return self.remove('shops/'+shopId)}
methods.getCategories=function(shopId,parameters){return self.get('shops/'+shopId+'/categories',parameters)}
methods.getCategory=function(shopId,categoryId,fields){return self.get('shops/'+shopId+'/categories',{fields:fields})}
methods.createCategory=function(shopId,category){return self.post('shops/'+shopId+'/categories',category)}
methods.updateCategory=function(shopId,categoryId,category){return self.post('shops/'+shopId+'/categories/'+categoryId,category)}
methods.deleteCategory=function(shopId,categoryId){return self.remove('shops/'+shopId+'/categories/'+categoryId)}
methods.getAddresses=function(parameters){return self.get('addresses',parameters)}
methods.getAddress=function(addressId,fields){return self.get('addresses/'+addressId,{fields:fields})}
methods.createAddress=function(address){return self.post('addresses',address)}
methods.updateAddress=function(addressId,address){return self.post('addresses/'+addressId,address)}
methods.deleteAddress=function(addressId){return self.remove('addresses/'+addressId)}
methods.getOrders=function(shopId,parameters){return self.get('shops/'+shopId+'/orders',parameters)}
methods.getOrder=function(shopId,orderId,fields){return self.get('shops/'+shopId+'/orders/'+orderId,{fields:fields})}
methods.createOrder=function(shopId,order,additionalFlags){var url='shops/'+shopId+'/orders/';if(additionalFlags)url+='?additionalFlags='+additionalFlags;return self.post(url,order)}
methods.updateOrder=function(shopId,orderId,order,additionalFlags){var url='shops/'+shopId+'/orders/'+orderId;if(additionalFlags)url+='?additionalFlags='+additionalFlags;return self.post(url,order)}
methods.deleteOrder=function(shopId,orderId){return self.remove('shops/'+shopId+'/orders/'+orderId)}
methods.getCarts=function(shopId,parameters){return self.get('shops/'+shopId+'/carts',parameters)}
methods.getCart=function(shopId,cartId,fields){return self.get('shops/'+shopId+'/carts/'+cartId,{fields:fields})}
methods.createCart=function(shopId,cart){return self.post('shops/'+shopId+'/carts',cart)}
methods.updateCart=function(shopId,cartId,cart){return self.post('shops/'+shopId+'/carts/'+cartId,cart)}
methods.deleteCart=function(shopId,cartId){return self.remove('shops/'+shopId+'/carts/'+cartId)}
methods.getMetaFields=function(shopId,parameters){return self.get('shops/'+shopId+'/meta-fields',parameters)}
methods.getMetaField=function(shopId,metaFieldId,fields){return self.get('shops/'+shopId+'/meta-fields/'+metaFieldId,{fields:fields})}
methods.createMetaField=function(shopId,metaField){return self.post('shops/'+shopId+'/meta-fields',metaField)}
methods.updateMetaField=function(shopId,metaFieldId,metaField){return self.post('shops/'+shopId+'/meta-fields/'+metaFieldId,metaField)}
methods.deleteMetaField=function(shopId,metaFieldId){return self.remove('shops/'+shopId+'/meta-fields/'+metaFieldId)}
methods.getProducts=function(shopId,parameters){return self.get('shops/'+shopId+'/products',parameters)}
methods.getProduct=function(shopId,productId,fields){return self.get('shops/'+shopId+'/products/'+productId,{fields:fields})}
methods.createProduct=function(shopId,product){return self.post('shops/'+shopId+'/products',product)}
methods.updateProduct=function(shopId,productId,product){return self.post('shops/'+shopId+'/products/'+productId,product)}
methods.updateProductCategories=function(shopId,productId,categories){return self.post('shops/'+shopId+'/products/'+productId,{categories:categories})}
methods.updateProductMetaFields=function(shopId,productId,metaFields){return self.post('shops/'+shopId+'/products/'+productId,{metaFields:metaFields})}
methods.deleteProduct=function(shopId,productId){return self.remove('shops/'+shopId+'/products/'+productId)}
methods.getProductVariants=function(shopId,productId,parameters){return self.get('shops/'+shopId+'/products/'+productId+'/variants',parameters)}
methods.getProductVariant=function(shopId,productId,variantId,fields){return self.get('shops/'+shopId+'/products/'+productId+'/variants/'+variantId,{fields:fields})}
methods.createProductVariant=function(shopId,productId,variant){return self.post('shops/'+shopId+'/products/'+productId+'/variants',variant)}
methods.updateProductVariant=function(shopId,productId,variantId,variant){return self.post('shops/'+shopId+'/products/'+productId+'/variants/'+variantId,variant)}
methods.deleteProductVariant=function(shopId,productId,variantId){return self.remove('shops/'+shopId+'/products/'+productId+'/variants/'+variantId)}
methods.getTaxes=function(shopId,parameters){return self.get('shops/'+shopId+'/taxes',parameters)}
methods.getTax=function(shopId,taxId,fields){return self.get('shops/'+shopId+'/taxes/'+taxId,{fields:fields})}
methods.createTax=function(shopId,tax){return self.post('shops/'+shopId+'/taxes',tax)}
methods.updateTax=function(shopId,taxId,tax){return self.post('shops/'+shopId+'/taxes/'+taxId,tax)}
methods.deleteTax=function(shopId,taxId){return self.remove('shops/'+shopId+'/taxes/'+taxId)}
methods.getFiles=function(page,perPage){return self.get('multimedia',{perPage:perPage,page:page})}
methods.uploadFile=function(blob){return self.upload(blob)}
methods.checkEnvironment=checkEnvironment;return methods}